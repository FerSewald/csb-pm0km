{"version":3,"sources":["control_VTO/Reducer.js","control_VTO/InventarioApp.js","control_VTO/hook/useForm.js","index.js"],"names":["Reducer","state","action","type","payload","filter","todo","id","map","done","init","JSON","parse","localStorage","getItem","InventarioApp","useReducer","productos","dispatch","initialState","useState","values","setValues","target","name","value","useForm","Producto","decripcion","fecha","VTO","handleInputChange","reset","useEffect","setItem","stringify","className","onClick","e","getvto","vto","desc","separator","newDate","Date","date","getDate","month","getMonth","year","getFullYear","getCurrentDate","console","log","prod","descrip","dia","productosId","onSubmit","preventDefault","trim","length","newItem","getTime","placeholder","autoComplete","onChange","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.92a116b9.chunk.js","sourcesContent":["export const Reducer = (state = [], action) => {\n  switch (action.type) {\n    case \"add\":\n      return [...state, action.payload];\n\n    case \"delete\":\n      return state.filter((todo) => todo.id !== action.payload);\n\n    case \"toggle\":\n      return state.map((todo) =>\n        todo.id === action.payload ? { ...todo, done: !todo.done } : todo\n      );\n\n    case \"toggle-old\":\n      return state.map((todo) => {\n        if (todo.id === action.payload) {\n          return {\n            ...todo,\n            done: !todo.done\n          };\n        } else {\n          return todo;\n        }\n      });\n\n    default:\n      return state;\n  }\n};\n","import React, { useReducer, useEffect } from \"react\";\nimport { Reducer } from \"./Reducer.js\";\nimport \"./inventario.css\";\nimport { useForm } from \"./hook/useForm\";\n\nconst init = () => {\n  return JSON.parse(localStorage.getItem(\"productos\")) || [];\n};\n\nfunction getCurrentDate(separator = \"-\") {\n  let newDate = new Date();\n  let date = newDate.getDate();\n  let month = newDate.getMonth() + 1;\n  let year = newDate.getFullYear();\n\n  return `${date}${separator}${\n    month < 10 ? `0${month}` : `${month}`\n  }${separator}${year}`;\n}\n\nexport const InventarioApp = () => {\n  const [productos, dispatch] = useReducer(Reducer, [], init);\n\n  const [\n    { Producto, fecha, VTO, decripcion },\n    handleInputChange,\n    reset\n  ] = useForm({\n    Producto: \"\",\n    decripcion: \"\",\n    fecha: \"\",\n    VTO: \"\"\n  });\n\n  useEffect(() => {\n    localStorage.setItem(\"productos\", JSON.stringify(productos));\n  }, [productos]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (Producto.trim().length <= 1) {\n      return;\n    }\n\n    const newItem = {\n      id: new Date().getTime(),\n      desc: Producto,\n      descrip: decripcion,\n      dia: fecha,\n      vto: VTO,\n      done: false\n    };\n\n    const action = {\n      type: \"add\",\n      payload: newItem\n    };\n\n    dispatch(action);\n    reset();\n  };\n\n  const handleDelete = (productosId) => {\n    const action = {\n      type: \"delete\",\n      payload: productosId\n    };\n    dispatch(action);\n  };\n\n\nconst handleVto = (e) => {\n\n  let getvto = JSON.parse(localStorage.getItem(\"productos\"));\n  let [{ vto, desc }] = getvto;\n  if (vto >= getCurrentDate()) {\n    console.log(desc + \" esta vencido\");\n  }\n\n    \n  };\n\n  return (\n    <div className=\"container pt-1\">\n\n        <button\n        className=\"btn btn-danger p-0\"\n        onClick={handleVto}\n      >\n        Buscar\n      </button>\n\n      \n\n      <hr />\n\n      <div className=\"row\">\n        {/* <div className=\"col-1  p-0 mt-1\">\n          {productos.map((prod, index) => (\n              <li key={prod.id} className=\"list-group-item\">\n                <p className=\"text-center\">{index + 1}</p>\n              </li>\n          ))}\n        </div> */}\n\n        <div className=\"col-8 p-0 mt-1\">\n          <div className=\"col-6\">\n            <ul className=\"list-group list-group-flush\">\n              {productos.map((prod) => (\n                <li key={prod.id} className=\"list-group-item\">\n                  <p className=\"\">{prod.desc}</p>\n                  <p className=\"\">{prod.descrip}</p>\n                  <p className=\"\">{prod.dia}</p>\n                  <p className=\"\">{prod.vto}</p>\n\n                  <button\n                    className=\"btn btn-danger p-0\"\n                    onClick={() => handleDelete(prod.id)}\n                  >\n                    borrar\n                  </button>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n\n        <div className=\"col-4\">\n          <h1>Agregar Producto</h1>\n          <hr />\n\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"text\"\n              name=\"Producto\"\n              className=\"form-control\"\n              placeholder=\"Producto...\"\n              autoComplete=\"off\"\n              value={Producto}\n              onChange={handleInputChange}\n            />\n            <input\n              type=\"text\"\n              name=\"decripcion\"\n              className=\"form-control\"\n              placeholder=\"descripciÃ²n...\"\n              autoComplete=\"off\"\n              value={decripcion}\n              onChange={handleInputChange}\n            />\n\n            <input\n              type=\"date\"\n              name=\"fecha\"\n              className=\"form-control\"\n              placeholder=\"fecha\"\n              autoComplete=\"off\"\n              value={fecha}\n              onChange={handleInputChange}\n            />\n            <input\n              type=\"date\"\n              name=\"VTO\"\n              className=\"form-control\"\n              placeholder=\"VTO\"\n              autoComplete=\"off\"\n              value={VTO}\n              onChange={handleInputChange}\n            />\n            <button\n              className=\"btn btn-outline-info mt-1 btn-block\"\n              type=\"submit\"\n            >\n              Agregar\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useState } from \"react\"\n\nexport const useForm = (initialState = {}) => {\n    const [values, setValues] = useState(initialState)\n\n    const reset = () =>{\n        setValues(initialState);\n    }\n\n    const handleInputChange = ({ target }) => {\n        setValues({\n            ...values,\n            [target.name]: target.value\n        });\n    }\n    return [values, handleInputChange, reset];\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { InventarioApp } from \"./control_VTO/InventarioApp.js\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <InventarioApp />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}